const - define constante

 Criação de variável
var - nunca sai da memória
let - sai da memória

Números inteiros
Números quebrados
Strings
Booleanos
Listas

Nunca precisa informar o tipo de dado, o Java usa tipagem fraca

Tipagens
	Forte
		var nome="Jão";
		var idade=28;
		console.log(nome + " " + idade);
			Contatenar uma string e um inteiro em Python dá #TypeError

	Fraca
		1 + "1" (+ é contatenação)
			Java vai colocar 11

	Inferência de tipo
		palavras reservadas
			var v = 10;
			v = "teste";
				Não precisa definir o tipo de dado inicialmente, mas depois de definido
				não aceitará nenhum outro.
	String(32-true)
		vai dar 31, pois Boolean é 0 e 1, portanto true = 1

Funções usadas para converter o tipo de dado
	
	parse
		parseInt()

	Number()

	String()
	
	Boolean()


Comparações javascript

== / !=
	Checa valor
=== / !==
	Checa valor e tipo

JQuery
	Framework Javascript

Diferença entre função nomeada e função anônima

Fn
	Pode ser chamada em qualquer lugar
Fa
	Não pode ser chamada

Função auto-invocada
(Function(){})()
(Function(){}()
	Vai executar uma vez e vai fugir do scopo
(Function() => {

))();

Função Arrow Functions
	Passagem de parâmetro
	Função anônima escrita de uma forma melhorada, 
	que pode ter um linha, ou pode fazer várias coisas, como a lambda




function load() {
                alert("Hello!")
            }
            window.onload = load;

console.log(count);

<button onclick="onClick()">Contar</button>

 function submitMsg() {
                let msg = prompt("Digite sua mensagem: ");
                document.getElementById("texto").textContent += msg;
            }


É sobre ter todas as pessoas do mundo para si

É sobre saber que em todo lugar ninguém zela por ti

É sobre ser a chuva e também tempestade em outros corações

E assim não ter amigos contigo em todas as situações

A gente pode sim ter tudo

Essa é a graça do mundo e tem que ser assim

Por isso eu prefiro o dinheiro e pix na conta para eu ficar feliz

É sobre tudo que o seu dinheiro é capaz de comprar

E também sobre cada momento que alguém tu possa subornar

E também é sobre correr contra o tempo pra ter sempre mais

Porque quanto menos se espera, a gente já ficou pra trás

Derruba teu filho do colo

Odeie e espanque alguém enquanto está aqui

Que a vida é trem-bala parceiro

E a gente é só trapaceiro

Prestes a partir


<tr> <tr>
                    <td class="w-50">January</td>
                    <td class="w-40">$100</td>
                    <td class="edit-cell"></td>
                </tr>


                    <td class="w-50">February</td>
                    <td class="w-40">$80</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">March</td>
                    <td class="w-40">$100</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">April</td>
                    <td class="w-40">$160</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">May</td>
                    <td class="w-40">$34</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">June</td>
                    <td class="w-40">$400</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">July</td>
                    <td class="w-40">$567</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">August</td>
                    <td class="w-40">$345</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">September</td>
                    <td class="w-40">$453</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">October</td>
                    <td class="w-40">$23</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">November</td>
                    <td class="w-40">$100</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>
                <tr>
                    <td class="w-50">December</td>
                    <td class="w-40">$146</td>
                    <td class="edit-cell"><a href="https://instagram.com/">view</a></td>
                </tr>

<td colspan="3"><small>Sum: $665</small></td>	


Json
-Javascript object notation
		Forma de criar objetos

{

	"nome": "Teste",
	"idade": 21,
	"nota": 7.4,
	"passou": true,
	"infos": [" ", " ", " "],
	"detalhes": {...}

}

let userConf = confirm(`Deseja realmente ALTERAR o lanche ${lanche.nome}?`);
                if(userConf) {
                    let index = lanches.indexOf(lanche);
                    lanches[index].valor = Number(prompt(`Informe o valor do ${lanche.nome}`));
                    tableLoad();
                }

let lanche = lanches.find(lanche => lanche.id === id);
                let value = prompt(`Informe o novo valor do lanche ${lanche.nome}`)
                if(value !== null) {
                    lanche.valor = Number(value);
                    tableLoad();
                }

Quando se sabe que a informação que eu quero que apareça vai demorar, eu uso o código assíncrono

Promise
	Recebe uma função e dois parametros
	resolve
	reject

Código produtor
	Demora a ser executado
Código consumidor
	Expera o produtor executar


<img src />
    <button onclick="loadImg()">Get CAT</button>

<body onload="loadCharList()">
    <ul id="charlist" style="font-size: 20px;"></ul>
</body>


Função para gerar cachorros aleatórios

	let req = new XMLHttpRequest();
            req.open("GET", "http://hp-api.herokuapp.com/api/characters", false);
            req.send(null);
            document.getElementById("charlist").innerHTML = 
                JSON.parse(req.responseText).map(char=> `
                    <li>${char.name}</li>
            `).join("")